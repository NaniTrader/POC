@page "/index-future-securities"
@attribute [Authorize(NaniTraderPermissions.Securities.Default)]
@inherits NaniTraderComponentBase
@inject ISecurityAppService SecurityAppService
@inject IBrokerAppService BrokerAppService
@inject IExchangeAppService ExchangeAppService
@inject IMarketDataProviderAppService MarketDataProviderAppService
@inject AbpBlazorMessageLocalizerHelper<NaniTraderResource> LH
@using Blazorise.Components
@using NaniTrader.Entities
@using NaniTrader.Services.Brokers
@using NaniTrader.Services.Exchanges
@using NaniTrader.Services.MarketData
@using NaniTrader.Services.Permissions
@using NaniTrader.Localization
@using NaniTrader.Services.Securities
@using Volo.Abp.AspNetCore.Components.Web

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["IndexFutureSecurities"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                @if (CanCreateIndexFutureSecurity)
                {
                    <Button Color="Color.Primary"
                            Clicked="OpenCreateIndexFutureSecurityModal">
                        @L["NewIndexFutureSecurity"]
                    </Button>
                }
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="IndexFutureSecurityInListDto"
                  Data="IndexFutureSecuritiesList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="IndexFutureSecurityInListDto"
                                Field="@nameof(IndexFutureSecurityInListDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                @if (CanEditIndexFutureSecurity)
                                {
                                    <DropdownItem Clicked="() => OpenEditIndexFutureSecurityModal(context)">
                                        @L["Edit"]
                                    </DropdownItem>
                                }
                                @if (CanDeleteIndexFutureSecurity)
                                {
                                    <DropdownItem Clicked="() => DeleteIndexFutureSecurityAsync(context)">
                                        @L["Delete"]
                                    </DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="IndexFutureSecurityInListDto"
                                Field="@nameof(IndexFutureSecurityInListDto.Name)"
                                Caption="@L["Name"]"></DataGridColumn>
                <DataGridColumn TItem="IndexFutureSecurityInListDto"
                                Field="@nameof(IndexFutureSecurityInListDto.Description)"
                                Caption="@L["Description"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateIndexFutureSecurityModal">
    @* <ModalBackdrop /> TODO: check sample code*@
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewIndexFutureSecurity"]</ModalTitle>
                <CloseButton Clicked="CloseCreateIndexFutureSecurityModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewIndexFutureSecurity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewIndexFutureSecurity.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Description"]</FieldLabel>
                            <TextEdit @bind-Text="@NewIndexFutureSecurity.Description">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["SecurityParentGroup"]</FieldLabel>
                        <SelectList TItem="ParentType"
                                    TValue="int"
                                    Data="Enum.GetValues<ParentType>()"
                                    TextField="@((item)=>item.ToString())"
                                    ValueField="@((item)=>(int)item)"
                                    SelectedValue="CreatingSecurityParentGroupId"
                                    SelectedValueChanged="CreatingParentGroupChanged"
                                    DefaultItemText="Choose your security parent group">
                        </SelectList>
                    </Field>
                    <Validation>
                        <Field>
                            <FieldLabel>@L["SecurityParent"]</FieldLabel>
                            <SelectList TItem="SecurityParent"
                                        TValue="Guid"
                                        Data="@CreatingSecurityParentList"
                                        TextField="@((item)=>item.DisplayName)"
                                        ValueField="@((item)=>item.Id)"
                                        @bind-SelectedValue="@NewIndexFutureSecurity.ParentId"
                                        DefaultItemText="Choose your security parent">
                            </SelectList>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>@L["UnderlyingSecurity"]</FieldLabel>
                            <SelectList TItem="UnderlyingSecurity"
                                        TValue="Guid"
                                        Data="@UnderlyingSecurityList"
                                        TextField="@((item)=>item.DisplayName)"
                                        ValueField="@((item)=>item.Id)"
                                        @bind-SelectedValue="@NewIndexFutureSecurity.UnderlyingId"
                                        DefaultItemText="Choose your underlying security">
                            </SelectList>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateIndexFutureSecurityModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateIndexFutureSecurityAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditIndexFutureSecurityModal">
    @* <ModalBackdrop /> TODO: check sample code*@
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingIndexFutureSecurity.Name</ModalTitle>
                <CloseButton Clicked="CloseEditIndexFutureSecurityModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingIndexFutureSecurity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingIndexFutureSecurity.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Description"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingIndexFutureSecurity.Description">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["SecurityParentGroup"]</FieldLabel>
                        <SelectList TItem="ParentType"
                                    TValue="int"
                                    Data="Enum.GetValues<ParentType>()"
                                    TextField="@((item)=>item.ToString())"
                                    ValueField="@((item)=>(int)item)"
                                    SelectedValue="EditingSecurityParentGroupId"
                                    SelectedValueChanged="EditingParentGroupChanged">
                        </SelectList>
                    </Field>
                    <Validation>
                        <Field>
                            <FieldLabel>@L["SecurityParent"]</FieldLabel>
                            <SelectList TItem="SecurityParent"
                                        TValue="Guid"
                                        Data="@EditingSecurityParentList"
                                        TextField="@((item)=>item.DisplayName)"
                                        ValueField="@((item)=>item.Id)"
                                        @bind-SelectedValue="@EditingIndexFutureSecurity.ParentId"
                                        DefaultItemText="Choose your security parent group">
                            </SelectList>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>@L["UnderlyingSecurity"]</FieldLabel>
                            <SelectList TItem="UnderlyingSecurity"
                                        TValue="Guid"
                                        Data="@UnderlyingSecurityList"
                                        TextField="@((item)=>item.DisplayName)"
                                        ValueField="@((item)=>item.Id)"
                                        @bind-SelectedValue="@EditingIndexFutureSecurity.UnderlyingId"
                                        DefaultItemText="Choose your underlying security">
                            </SelectList>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditIndexFutureSecurityModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateIndexFutureSecurityAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>